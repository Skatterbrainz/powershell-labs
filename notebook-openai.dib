#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"name":"csharp","languageName":"C#","aliases":["c#","C#"]},{"name":"vscode","aliases":["frontend"],"languageName":null},{"name":".NET","aliases":[],"languageName":null},{"name":"fsharp","languageName":"F#","aliases":["f#","F#"]},{"name":"html","languageName":"HTML","aliases":[]},{"name":"kql","languageName":"KQL","aliases":[]},{"name":"mermaid","languageName":"Mermaid","aliases":[]},{"name":"pwsh","languageName":"PowerShell","aliases":["powershell"]},{"name":"sql","languageName":"SQL","aliases":[]},{"name":"value","aliases":[],"languageName":null}]}}

#!markdown

# OpenAI with PowerShellAI module

#!markdown

### PowerShellAI setup

Install the PowerShell module

#!pwsh

if (!(Get-Module PowerShellAI -ListAvailable)) {
	Write-Output "Install-Module PowerShellAI"
} else {
	Write-Output "Module is already installed"
}

#!markdown

### Preparation

* OpenAI Playground Account
* Create an API key (copy to clipboard)
* Store in a secure place (key vault, etc.)
* Import into environment variable "OpenAIKey"

#!pwsh

if (-not $($env:OpenAIKey)) {
	if (Test-Path HKCU:\SOFTWARE\Skatterbrainz) {
		$env:OpenAIKey = $(Get-ItemProperty -Path HKCU:\software\Skatterbrainz -Name OpenAIKey).OpenAIKey
		Write-Output "key imported"
	}
}

#!markdown

Get commit description by asking OpenAI to analyze the git changes

#!pwsh

cd "c:\git\powershell-labs"
git stage --all
git status | ai "write me a detailed commit message for the staged changes"

#!markdown

Stage and Commit changes with AI-generated commit message

#!pwsh

git status | ai "write me a detailed commit message for the staged changes" | % { git stage --all; git commit -m "$($_)" }

#!markdown

### General Examples

#!pwsh

copilot "using powershell and ms graph, just code, show me how to connect to ms graph to query azure ad user accounts"

#!pwsh

ai "using powershell and regex, just code, show me how to validate a string as being a valid email address format"

#!pwsh

ai "provide a table of the top 5 most populated US states, including their full name, abbreviation, population as of 2020 and sort by population in descending order. Output as json"

#!pwsh

ai "provide a table of the top 5 most populated US states, including their full name, abbreviation, population as of 2020 and sort by population in descending order. Output as a markdown table"
